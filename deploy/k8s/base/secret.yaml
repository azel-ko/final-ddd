# 注意: 这是模板文件，实际部署时需要替换为真实的 base64 编码值
# 使用命令生成: echo -n "your-secret" | base64

apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: final-ddd
  labels:
    app: final-ddd
    component: secrets
type: Opaque
data:
  # PostgreSQL 数据库连接字符串 (需要 base64 编码)
  # postgresql://postgres:password@postgres-service:5432/final_ddd?sslmode=disable
  database-url: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBhc3N3b3JkQHBvc3RncmVzLXNlcnZpY2U6NTQzMi9maW5hbF9kZGQ/c3NsbW9kZT1kaXNhYmxl
  
  # 数据库密码 (需要 base64 编码)
  db-password: cGFzc3dvcmQ=
  
  # JWT 密钥 (需要 base64 编码)
  jwt-secret: eW91ci1qd3Qtc2VjcmV0LWtleQ==
  
  # 数据库密码 (需要 base64 编码)
  postgres-password: cGFzc3dvcmQ=
  
  # Redis 密码 (如果需要，需要 base64 编码)
  redis-password: ""

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
  namespace: final-ddd
  labels:
    app: postgres
    component: database
type: Opaque
data:
  # PostgreSQL 用户密码 (需要 base64 编码)
  postgres-password: cGFzc3dvcmQ=
  postgres-user: cG9zdGdyZXM=
  postgres-db: ZmluYWxfZGRk

---
# TLS 证书 Secret 模板
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: final-ddd
  labels:
    app: final-ddd
    component: tls
type: kubernetes.io/tls
data:
  # 这些将由 cert-manager 自动填充
  tls.crt: ""
  tls.key: ""