apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: monitoring
data:
  app-rules.yml: |
    groups:
      - name: application.rules
        rules:
          - alert: ApplicationDown
            expr: up{job="final-ddd-app"} == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Application {{ $labels.instance }} is down"
              description: "Application has been down for more than 1 minute."

          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: "High error rate on {{ $labels.instance }}"
              description: "Error rate is {{ $value }} errors per second."

          - alert: HighResponseTime
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 0.5
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High response time on {{ $labels.instance }}"
              description: "95th percentile response time is {{ $value }} seconds."

          - alert: HighMemoryUsage
            expr: (container_memory_usage_bytes{name="final-ddd-app"} / container_spec_memory_limit_bytes{name="final-ddd-app"}) > 0.8
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage on {{ $labels.instance }}"
              description: "Memory usage is {{ $value | humanizePercentage }}."

          - alert: HighCPUUsage
            expr: rate(container_cpu_usage_seconds_total{name="final-ddd-app"}[5m]) > 0.8
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage on {{ $labels.instance }}"
              description: "CPU usage is {{ $value | humanizePercentage }}."

  kubernetes-rules.yml: |
    groups:
      - name: kubernetes.rules
        rules:
          - alert: KubernetesNodeReady
            expr: kube_node_status_condition{condition="Ready",status="true"} == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Kubernetes node not ready"
              description: "Node {{ $labels.node }} has been unready for more than 1 minute."

          - alert: KubernetesPodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "Pod is crash looping"
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is restarting {{ $value }} times per minute."

          - alert: KubernetesPodNotReady
            expr: kube_pod_status_ready{condition="false"} == 1
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Pod not ready"
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been unready for more than 5 minutes."

          - alert: KubernetesDeploymentReplicasMismatch
            expr: kube_deployment_spec_replicas != kube_deployment_status_available_replicas
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Deployment replicas mismatch"
              description: "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has {{ $labels.spec_replicas }} desired replicas but {{ $labels.available_replicas }} available."

  database-rules.yml: |
    groups:
      - name: database.rules
        rules:
          - alert: PostgreSQLDown
            expr: up{job="postgres"} == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "PostgreSQL is down"
              description: "PostgreSQL database has been down for more than 1 minute."

          - alert: PostgreSQLTooManyConnections
            expr: sum(pg_stat_activity_count) by (instance) > 80
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: "PostgreSQL too many connections"
              description: "PostgreSQL has {{ $value }} connections, which is approaching the limit."

          - alert: PostgreSQLHighConnectionUsage
            expr: (sum(pg_stat_activity_count) by (instance) / pg_settings_max_connections) > 0.8
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "PostgreSQL high connection usage"
              description: "PostgreSQL connection usage is {{ $value | humanizePercentage }}."

          - alert: PostgreSQLSlowQueries
            expr: rate(pg_stat_activity_max_tx_duration[5m]) > 60
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: "PostgreSQL slow queries detected"
              description: "PostgreSQL has queries running for more than 60 seconds."

  system-rules.yml: |
    groups:
      - name: system.rules
        rules:
          - alert: HighDiskUsage
            expr: (node_filesystem_size_bytes - node_filesystem_free_bytes) / node_filesystem_size_bytes > 0.85
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High disk usage"
              description: "Disk usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}."

          - alert: HighMemoryUsage
            expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes > 0.9
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage"
              description: "Memory usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}."

          - alert: HighCPUUsage
            expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 85
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage"
              description: "CPU usage is {{ $value }}% on {{ $labels.instance }}."