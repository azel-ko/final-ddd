# Base monitoring configuration values
# This file contains common configuration shared across all environments

global:
  imageRegistry: ""
  imagePullSecrets: []

prometheus:
  enabled: true
  image:
    repository: prom/prometheus
    tag: v2.45.0
    pullPolicy: IfNotPresent
  
  retention: "15d"
  retentionSize: "10GB"
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  
  storage:
    enabled: true
    size: "20Gi"
    storageClass: "local-path"
  
  config:
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
  serviceMonitor:
    enabled: true
    interval: 15s
    scrapeTimeout: 10s
  
  alerting:
    enabled: true
    alertmanagers:
      - static_configs:
          - targets: ["alertmanager:9093"]

grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: 10.0.0
    pullPolicy: IfNotPresent
  
  admin:
    existingSecret: "monitoring-secrets"
    userKey: "grafana-admin-user"
    passwordKey: "grafana-admin-password"
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  persistence:
    enabled: true
    size: "5Gi"
    storageClass: "local-path"
  
  datasources:
    enabled: true
    defaultDatasourceEnabled: true
  
  dashboards:
    enabled: true
    defaultDashboardsEnabled: true
  
  sidecar:
    dashboards:
      enabled: true
      searchNamespace: "monitoring"
      label: "grafana_dashboard"
    datasources:
      enabled: true
      searchNamespace: "monitoring"
      label: "grafana_datasource"

loki:
  enabled: true
  image:
    repository: grafana/loki
    tag: 2.8.0
    pullPolicy: IfNotPresent
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  
  persistence:
    enabled: true
    size: "10Gi"
    storageClass: "local-path"
  
  config:
    auth_enabled: false
    server:
      http_listen_port: 3100
    
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
    
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    
    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/boltdb-shipper-active
        cache_location: /loki/boltdb-shipper-cache
        shared_store: filesystem
      filesystem:
        directory: /loki/chunks
    
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
    
    chunk_store_config:
      max_look_back_period: 0s
    
    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s

promtail:
  enabled: true
  image:
    repository: grafana/promtail
    tag: 2.8.0
    pullPolicy: IfNotPresent
  
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  
  config:
    server:
      http_listen_port: 3101
    
    positions:
      filename: /tmp/positions.yaml
    
    clients:
      - url: http://loki:3100/loki/api/v1/push
    
    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels: [__meta_kubernetes_pod_uid, __meta_kubernetes_pod_container_name]
            target_label: __path__

alertmanager:
  enabled: true
  image:
    repository: prom/alertmanager
    tag: v0.25.0
    pullPolicy: IfNotPresent
  
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  
  persistence:
    enabled: true
    size: "2Gi"
    storageClass: "local-path"
  
  config:
    global:
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alerts@yourdomain.com'
    
    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'default'
    
    receivers:
      - name: 'default'
        webhook_configs:
          - url: 'http://webhook-service:5000/alerts'
            send_resolved: true

nodeExporter:
  enabled: true
  image:
    repository: prom/node-exporter
    tag: v1.6.0
    pullPolicy: IfNotPresent
  
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  
  hostNetwork: true
  hostPID: true
  
  tolerations:
    - effect: NoSchedule
      operator: Exists

kubeStateMetrics:
  enabled: true
  image:
    repository: k8s.gcr.io/kube-state-metrics/kube-state-metrics
    tag: v2.9.2
    pullPolicy: IfNotPresent
  
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"