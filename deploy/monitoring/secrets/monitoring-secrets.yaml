apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: monitoring
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  # To generate: echo -n "your-password" | base64
  grafana-admin-password: YWRtaW4xMjM=  # admin123
  grafana-secret-key: Z3JhZmFuYS1zZWNyZXQta2V5LTEyMw==  # grafana-secret-key-123
  prometheus-basic-auth: cHJvbWV0aGV1czpwYXNzd29yZA==  # prometheus:password
  alertmanager-webhook-url: ""  # Add your webhook URL if needed
stringData:
  # You can also use stringData for non-encoded values
  grafana-database-password: "grafana-db-password"
  loki-s3-access-key: ""
  loki-s3-secret-key: ""

---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-config
  namespace: monitoring
type: Opaque
stringData:
  grafana.ini: |
    [server]
    http_port = 3000
    domain = ${GRAFANA_DOMAIN:localhost}
    root_url = https://%(domain)s/grafana/
    serve_from_sub_path = true

    [database]
    type = sqlite3
    path = /var/lib/grafana/grafana.db

    [security]
    admin_user = admin
    admin_password = $__env{GF_SECURITY_ADMIN_PASSWORD}
    secret_key = $__env{GF_SECURITY_SECRET_KEY}
    disable_gravatar = true
    cookie_secure = true
    cookie_samesite = strict

    [users]
    allow_sign_up = false
    allow_org_create = false
    auto_assign_org = true
    auto_assign_org_role = Viewer

    [auth]
    disable_login_form = false
    disable_signout_menu = false

    [auth.anonymous]
    enabled = false

    [log]
    mode = console
    level = info

    [alerting]
    enabled = true
    execute_alerts = true

    [metrics]
    enabled = true

    [feature_toggles]
    enable = ngalert

---
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-config-secret
  namespace: monitoring
type: Opaque
stringData:
  web-config.yml: |
    basic_auth_users:
      prometheus: $2b$12$hNf2lSsxfm0.i4a.1kVpSOVyBCfIB51VRjgBUyv6kdnyTlgWj81Ay  # password: password
    
  alertmanager.yml: |
    global:
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alerts@yourdomain.com'
      smtp_auth_username: ''
      smtp_auth_password: ''

    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'

    receivers:
      - name: 'web.hook'
        webhook_configs:
          - url: 'http://webhook-service:5000/alerts'
            send_resolved: true

    inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'dev', 'instance']